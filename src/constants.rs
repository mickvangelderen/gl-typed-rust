//! This module proviles the OpenGL constants as you know them.

use crate::symbols::*;

pub const ACTIVE_ATOMIC_COUNTER_BUFFERS: ActiveAtomicCounterBuffers = ActiveAtomicCounterBuffers;
pub const ACTIVE_ATTRIBUTES: ActiveAttributes = ActiveAttributes;
pub const ACTIVE_ATTRIBUTE_MAX_LENGTH: ActiveAttributeMaxLength = ActiveAttributeMaxLength;
pub const ACTIVE_UNIFORMS: ActiveUniforms = ActiveUniforms;
pub const ACTIVE_UNIFORM_BLOCKS: ActiveUniformBlocks = ActiveUniformBlocks;
pub const ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: ActiveUniformBlockMaxNameLength = ActiveUniformBlockMaxNameLength;
pub const ACTIVE_UNIFORM_MAX_LENGTH: ActiveUniformMaxLength = ActiveUniformMaxLength;
pub const ATTACHED_SHADERS: AttachedShaders = AttachedShaders;
pub const CLAMP_TO_BORDER: ClampToBorder = ClampToBorder;
pub const CLAMP_TO_EDGE: ClampToEdge = ClampToEdge;
pub const COMPILE_STATUS: CompileStatus = CompileStatus;
pub const COMPUTE_SHADER: Compute = Compute;
pub const COMPUTE_WORK_GROUP_SIZE: ComputeWorkGroupSize = ComputeWorkGroupSize;
pub const DELETE_STATUS: DeleteStatus = DeleteStatus;
pub const FALSE: False = False;
pub const FRAGMENT_SHADER: Fragment = Fragment;
pub const GEOMETRY_INPUT_TYPE: GeometryInputType = GeometryInputType;
pub const GEOMETRY_OUTPUT_TYPE: GeometryOutputType = GeometryOutputType;
pub const GEOMETRY_SHADER: Geometry = Geometry;
pub const GEOMETRY_SHADER_INVOCATIONS: GeometryShaderInvocations = GeometryShaderInvocations;
pub const GEOMETRY_VERTICES_OUT: GeometryVerticesOut = GeometryVerticesOut;
pub const INFO_LOG_LENGTH: InfoLogLength = InfoLogLength;
pub const LINEAR: Linear = Linear;
pub const LINEAR_MIPMAP_LINEAR: LinearMipmapLinear = LinearMipmapLinear;
pub const LINEAR_MIPMAP_NEAREST: LinearMipmapNearest = LinearMipmapNearest;
pub const LINK_STATUS: LinkStatus = LinkStatus;
pub const MIRRORED_REPEAT: MirroredRepeat = MirroredRepeat;
pub const MIRROR_CLAMP_TO_EDGE: MirrorClampToEdge = MirrorClampToEdge;
pub const NEAREST: Nearest = Nearest;
pub const NEAREST_MIPMAP_LINEAR: NearestMipmapLinear = NearestMipmapLinear;
pub const NEAREST_MIPMAP_NEAREST: NearestMipmapNearest = NearestMipmapNearest;
pub const PROGRAM_BINARY_RETRIEVABLE_HINT: ProgramBinaryRetrievableHint = ProgramBinaryRetrievableHint;
pub const PROGRAM_SEPARABLE: ProgramSeparable = ProgramSeparable;
pub const RENDERER: Renderer = Renderer;
pub const REPEAT: Repeat = Repeat;
pub const SHADER_SOURCE_LENGTH: ShaderSourceLength = ShaderSourceLength;
pub const SHADER_TYPE: ShaderType = ShaderType;
pub const SHADING_LANGUAGE_VERSION: ShadingLanguageVersion = ShadingLanguageVersion;
pub const TESS_CONTROL_OUTPUT_VERTICES: TessControlOutputVertices = TessControlOutputVertices;
pub const TESS_CONTROL_SHADER: TessControl = TessControl;
pub const TESS_EVALUATION_SHADER: TessEvaluation = TessEvaluation;
pub const TESS_GEN_MODE: TessGenMode = TessGenMode;
pub const TESS_GEN_POINT_MODE: TessGenPointMode = TessGenPointMode;
pub const TESS_GEN_VERTEX_ORDER: TessGenVertexOrder = TessGenVertexOrder;
pub const TEXTURE0: Texture0 = Texture0;
pub const TEXTURE10: Texture10 = Texture10;
pub const TEXTURE11: Texture11 = Texture11;
pub const TEXTURE12: Texture12 = Texture12;
pub const TEXTURE13: Texture13 = Texture13;
pub const TEXTURE14: Texture14 = Texture14;
pub const TEXTURE15: Texture15 = Texture15;
pub const TEXTURE1: Texture1 = Texture1;
pub const TEXTURE2: Texture2 = Texture2;
pub const TEXTURE3: Texture3 = Texture3;
pub const TEXTURE4: Texture4 = Texture4;
pub const TEXTURE5: Texture5 = Texture5;
pub const TEXTURE6: Texture6 = Texture6;
pub const TEXTURE7: Texture7 = Texture7;
pub const TEXTURE8: Texture8 = Texture8;
pub const TEXTURE9: Texture9 = Texture9;
pub const TEXTURE_1D: Texture1D = Texture1D;
pub const TEXTURE_1D_ARRAY: Texture1DArray = Texture1DArray;
pub const TEXTURE_2D: Texture2D = Texture2D;
pub const TEXTURE_2D_ARRAY: Texture2DArray = Texture2DArray;
pub const TEXTURE_2D_MULTISAMPLE: Texture2DMultisample = Texture2DMultisample;
pub const TEXTURE_2D_MULTISAMPLE_ARRAY: Texture2DMultisampleArray = Texture2DMultisampleArray;
pub const TEXTURE_3D: Texture3D = Texture3D;
pub const TEXTURE_BASE_LEVEL: TextureBaseLevel = TextureBaseLevel;
pub const TEXTURE_BUFFER: TextureBuffer = TextureBuffer;
pub const TEXTURE_CUBE_MAP: TextureCubeMap = TextureCubeMap;
pub const TEXTURE_CUBE_MAP_ARRAY: TextureCubeMapArray = TextureCubeMapArray;
pub const TEXTURE_MAG_FILTER: TextureMagFilter = TextureMagFilter;
pub const TEXTURE_MIN_FILTER: TextureMinFilter = TextureMinFilter;
pub const TEXTURE_RECTANGLE: TextureRectangle = TextureRectangle;
pub const TEXTURE_WRAP_R: TextureWrapR = TextureWrapR;
pub const TEXTURE_WRAP_S: TextureWrapS = TextureWrapS;
pub const TEXTURE_WRAP_T: TextureWrapT = TextureWrapT;
pub const TRANSFORM_FEEDBACK_BUFFER_MODE: TransformFeedbackBufferMode = TransformFeedbackBufferMode;
pub const TRANSFORM_FEEDBACK_VARYINGS: TransformFeedbackVaryings = TransformFeedbackVaryings;
pub const TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: TransformFeedbackVaryingMaxLength = TransformFeedbackVaryingMaxLength;
pub const TRUE: True = True;
pub const VALIDATE_STATUS: ValidateStatus = ValidateStatus;
pub const VENDOR: Vendor = Vendor;
pub const VERSION: Version = Version;
pub const VERTEX_SHADER: Vertex = Vertex;